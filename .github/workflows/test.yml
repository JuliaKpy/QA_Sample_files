name: Run Selenium Tests

on:
  push:
    branches:
      - main  # Runs on push to main branch
  pull_request:
    branches:
      - main  # Runs on PR to main branch

jobs:
  push_code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Automated commit after successful tests"
          git push

  test:
    needs: push_code  # Ensures testing runs after pushing new code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install selenium pytest allure-pytest
          sudo apt-get install -y xvfb  # Needed for running headless Chrome

      - name: Set up Chrome & Chromedriver
        run: |
          sudo apt-get install -y google-chrome-stable
          CHROME_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://chromedriver.storage.googleapis.com/${CHROME_VERSION}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          chmod +x /usr/local/bin/chromedriver

      - name: Run FrontEnd and BackEnd Tests with Pytest
        run: |
          pytest backEnd_LControl.py --alluredir=allure-results -v --headless
          pytest frontEnd_LControl.py --alluredir=allure-results -v --headless

      - name: Upload Allure Reports
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
          retention-days: 7

      - name: Upload Test Logs (if failed)
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: "*.log"

      - name: Generate Allure Report
        run: |
            pip install allure-commandline
            allure generate allure-results -o allure-report --clean
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./allure-report
      